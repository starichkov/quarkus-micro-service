services:
  mysql:
    image: mysql:8.0.33
    container_name: "quarkus-mysql8"
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_DATABASE=quarkus_db"
      - "MYSQL_USER=${DB_USERNAME}"
      - "MYSQL_PASSWORD=${DB_PASSWORD}"
    ports:
      - "3306:3306"
    networks:
      - "composenet"
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${MYSQL_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s
  redis:
    image: redis:6.2.12-alpine
    container_name: "quarkus-redis6"
    ports:
      - "6379:6379"
    networks:
      - "composenet"
  jaeger:
    image: jaegertracing/all-in-one:1.46
    container_name: "quarkus-jaeger"
    environment:
      - "COLLECTOR_ZIPKIN_HOST_PORT=:9411"
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - "composenet"
  quarkus-micro-service:
    build: .
    container_name: "quarkus-micro-service"
    environment:
      - "database.host=quarkus-mysql8"
      - "database.username=${DB_USERNAME}"
      - "database.password=${DB_PASSWORD}"
      - "jaeger.host=quarkus-jaeger"
      - "redis.host=quarkus-redis6"
    ports:
      - "8080:8080"
    networks:
      - "composenet"
    depends_on:
      mysql:
        condition: service_healthy
      jaeger:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: "wget -O- --tries=1 --no-verbose --quiet http://localhost:8080/q/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
  prometheus:
    image: prom/prometheus:v2.37.8
    build:
      context: configuration/prometheus
      dockerfile: Dockerfile
    container_name: "quarkus-prometheus"
    ports:
      - "9090:9090"
    networks:
      - "composenet"
    depends_on:
      quarkus-micro-service:
        condition: service_healthy

networks:
  composenet:
    driver: bridge
    name: "composenet"
